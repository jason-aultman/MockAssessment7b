@model MockAssessment7b.Models.Donut

@{
    ViewData["Title"] = "Search";
}

<h1>Search</h1>

<div>
    <h4>Donut</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Id)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Id)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Calories)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Calories)
        </dd>
        @if (Model.Extras.Count > 0)
        {
            for (int x = 0; x < Model.Extras.Count; x++)
            {
                <dt class="col-sm-2">
                    @Html.Raw("Extra option: ")
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Extras[x])
                </dd>
            }
        }
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Photo)
        </dt>
        @if (Model.Photo != null)
        {
            <dd class="col-sm-10">
                <img src="@Url.Content(Model.Photo)" alt="Donut" width="175" />
            </dd>
        }
        else
        {
            <dd class="col-sm-10">
            @Html.Raw("No image available")
            </dd>
        }
        
    </dl>
</div>
<div>
    @Html.ActionLink("Edit", "Edit", new { /* id = Model.PrimaryKey */ }) |
    <a asp-action="Index">Back to List</a>
</div>
